# -*- coding: utf-8 -*-
"""failing keops.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/gjhuizing/298123f2811f562b5802d031b8a1eef1/failing-keops.ipynb
"""

import torch
import matplotlib.pyplot as plt
import numpy as np
from scipy.sparse import random as sparse_random

#!pip install pykeops[colab] > install.log

from pykeops.torch import LazyTensor

device = 'cuda'
dtype = torch.float

eps = .1

m, n = 2500, 206

# The dataset.
A = torch.rand(m, n, device=device, dtype=dtype) # m*n

# Euclidean distance between features.
x_i = LazyTensor(A[:, None, :])
x_j = LazyTensor(A[None, :, :])
C_lazy = ((x_i - x_j)**2).sum(dim=2) # m*m
#C_lazy /= C_lazy.max()

# This is the euclidean distance kernel.
K = (-C_lazy/eps).exp() # m*m

G = torch.rand(m, n, device=device, dtype=dtype, requires_grad=True)  # m*n

print(K@G)  # m*n

